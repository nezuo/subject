"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{76647:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return b}});var r=n(87462),u=n(63366),o=(n(67294),n(3905)),i=["components"],a={},c="Subject",s={type:"mdx",permalink:"/subject/",source:"@site/pages/index.md"},l=[],p={toc:l};function b(t){var e=t.components,n=(0,u.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"subject"},"Subject"),(0,o.kt)("p",null,"An implementation of the observer pattern."),(0,o.kt)("p",null,"Notable differences from Roblox's Signal pattern and similar implementations:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Subscribers can be threads or functions."),(0,o.kt)("li",{parentName:"ul"},"Subscribers are unordered."),(0,o.kt)("li",{parentName:"ul"},"Subscribing returns an unsubscribe function instead of a Connection object which interfaces well with the Maid pattern.")))}b.isMDXComponent=!0}}]);