"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57],{49853:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"```lua\\nlocal subject = Subject.new()\\n```","params":[],"returns":[{"desc":"","lua_type":"Subject"}],"function_type":"static","source":{"line":14,"path":"src/init.lua"}},{"name":"notify","desc":"Calls all subscribers in seperate threads with the arguments passed. The order in which each subscriber is called is undefined.\\n\\n```lua\\nsubject:notify(\\"a\\", 1, true)\\n```","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":29,"path":"src/init.lua"}},{"name":"subscribe","desc":"Adds a subscriber to the subject and returns a function to unsubscribe it.\\n\\n:::info\\nThe returned `unsubscribe` function does nothing if the subscriber is already unsubscribed.\\n:::\\n\\n```lua\\nlocal unsubscribe = subject:subscribe(function() end)\\n\\nunsubscribe()\\n```","params":[{"name":"subscriber","desc":"","lua_type":"(...: any) -> ...any | thread"}],"returns":[{"desc":"","lua_type":"() -> ()"}],"function_type":"method","source":{"line":51,"path":"src/init.lua"}}],"properties":[],"types":[],"name":"Subject","desc":"","source":{"line":4,"path":"src/init.lua"}}')}}]);